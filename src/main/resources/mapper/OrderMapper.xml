<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.csu.jpetstore.persistence.OrderMapper">

    <cache/>

    <select id="getOrder" resultType="order" parameterType="int">
    select
      billaddr1 as billaddress1,
      billaddr2 as billaddress2,
      billcity,
      billcountry,
      billstate,
      billtofirstname,
      billtolastname,
      billzip,
      shipaddr1 as shipaddress1,
      shipaddr2 as shipaddress2,
      shipcity,
      shipcountry,
      shipstate,
      shiptofirstname,
      shiptolastname,
      shipzip,
      cardtype,
      courier,
      creditcard,
      exprdate as expirydate,
      locale,
      orderdate,
      orders.orderid,
      totalprice,
      userid as username,
      status
    from orders, orderstatus
    where orders.orderid = #{value}
      and orders.orderid = orderstatus.orderid
  </select>

    <select id="getOrdersByUsername" parameterType="string" resultType="order">
    select
      billaddr1 as billAddress1,
      billaddr2 as billAddress2,
      billcity,
      billcountry,
      billstate,
      billtofirstname,
      billtolastname,
      billzip,
      shipaddr1 as shipAddress1,
      shipaddr2 as shipAddress2,
      shipcity,
      shipcountry,
      shipstate,
      shiptofirstname,
      shiptolastname,
      shipzip,
      cardtype,
      courier,
      creditcard,
      exprdate as expiryDate,
      locale,
      orderdate,
      orders.orderid,
      totalprice,
      userid as username,
      status
    from orders, orderstatus
    where orders.userid = #{value}
      and orders.orderid = orderstatus.orderid
    order by orderdate
  </select>

  <select id="getOrdersByStatus" parameterType="string" resultType="order">
    select
      billaddr1 as billAddress1,
      billaddr2 as billAddress2,
      billcity,
      billcountry,
      billstate,
      billtofirstname,
      billtolastname,
      billzip,
      shipaddr1 as shipAddress1,
      shipaddr2 as shipAddress2,
      shipcity,
      shipcountry,
      shipstate,
      shiptofirstname,
      shiptolastname,
      shipzip,
      cardtype,
      courier,
      creditcard,
      exprdate as expiryDate,
      locale,
      orderdate,
      orders.orderid,
      totalprice,
      userid as username,
      status
    from orders, orderstatus
    where orderstatus.status = #{value}
      and orders.orderid = orderstatus.orderid
    order by orderdate
  </select>


  <select id="getOrders" resultType="order">
    select
      billaddr1 as billAddress1,
      billaddr2 as billAddress2,
      billcity,
      billcountry,
      billstate,
      billtofirstname,
      billtolastname,
      billzip,
      shipaddr1 as shipAddress1,
      shipaddr2 as shipAddress2,
      shipcity,
      shipcountry,
      shipstate,
      shiptofirstname,
      shiptolastname,
      shipzip,
      cardtype,
      courier,
      creditcard,
      exprdate as expiryDate,
      locale,
      orderdate,
      orders.orderid,
      totalprice,
      userid as username,
      status
    from orders, orderstatus
    where orders.orderid = orderstatus.orderid
    order by orderdate
  </select>

    <insert id="insertOrder" parameterType="order">
    insert into orders (orderid, userid, orderdate, shipaddr1, shipaddr2, shipcity, shipstate,
      shipzip, shipcountry, billaddr1, billaddr2, billcity, billstate, billzip, billcountry,
      courier, totalprice, billtofirstname, billtolastname, shiptofirstname, shiptolastname,
      creditcard, exprdate, cardtype, locale)
    values(#{orderId}, #{username}, #{orderDate}, #{shipAddress1}, #{shipAddress2,jdbcType=VARCHAR}, #{shipCity},
      #{shipState}, #{shipZip}, #{shipCountry}, #{billAddress1}, #{billAddress2,jdbcType=VARCHAR}, #{billCity},
      #{billState}, #{billZip}, #{billCountry}, #{courier}, #{totalPrice}, #{billToFirstName}, #{billToLastName},
      #{shipToFirstName}, #{shipToLastName}, #{creditCard}, #{expiryDate}, #{cardType}, #{locale})
  </insert>

    <insert id="insertOrderStatus" parameterType="order">
    insert into orderstatus (orderid, linenum, TIMESTAMP, status)
    values (#{orderId,jdbcType=NUMERIC}, #{linenum,jdbcType=NUMERIC}, #{orderDate,jdbcType=TIMESTAMP}, "1")
  </insert>


    <!--  1-未付款，2-已付款，3-运输中，4-已签收-->
  <update id="updateOrderStatus" parameterType="order">
    update orderstatus set
     status = #{status}
    where orderid = #{orderId}
  </update>

  <update id="updateOrder" parameterType="order">
    update orders set
        billaddr1 = #{billAddress1},
      billaddr2 = #{billAddress2},
      billcity = #{billCity},
      billcountry = #{billCountry},
      billstate = #{billState},
      billtofirstname = #{billToFirstName},
      billtolastname = #{billToLastName},
      billzip = #{billZip},
      shipaddr1 = #{shipAddress1},
      shipaddr2 = #{shipAddress2},
      shipcity = #{shipCity},
      shipcountry = #{shipCountry},
      shipstate = #{shipState},
      shiptofirstname = #{shipToFirstName},
      shiptolastname = #{shipToLastName},
      shipzip = #{shipZip},
      cardtype = #{cardType},
      courier = #{courier},
      creditcard = #{creditCard},
      exprdate = #{expiryDate},
      locale = #{locale},
      orderdate = #{orderDate},
      totalprice = #{totalPrice}
    where orderid = #{orderId}
  </update>
  <delete id="deleteOrder" parameterType="int">
    delete from orders
    where orderid = #{value}
  </delete>
</mapper>